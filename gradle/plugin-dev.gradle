apply plugin: 'maven-publish'

targetCompatibility = 1.8
sourceCompatibility = 1.8

dependencies {
    implementation localGroovy()
    implementation gradleApi()
    api "org.ysb33r.gradle:grolifant-core:${grolifantVer}"
    api "org.ysb33r.gradle:grolifant40:${grolifantVer}"
    api "org.ysb33r.gradle:grolifant50:${grolifantVer}"
    api "org.ysb33r.gradle:grolifant60:${grolifantVer}"
    api "org.ysb33r.gradle:grolifant70:${grolifantVer}"

    testImplementation("org.spockframework:spock-core:${spockMainVer}-groovy-${spockGroovyVer}") {
        exclude module: 'groovy-all'
    }

    testImplementation localGroovy()
    testImplementation gradleTestKit()
    testImplementation "org.ysb33r.gradle:grolifant70:${grolifantVer}"
}

gradleTest {
    versions gradleTestMinVersion

    // tag::gradleTestVersions[]
    versions '4.10.3', '5.6.3', '6.5.1', '7.4.2'
    // end::gradleTestVersions[]

    systemProperties 'org.ysb33r.gradle.hashicorp.releases.uri': terraformTestCacheDir.absoluteFile.toURI()
    dependsOn jar, ':cacheTerraformBinaries'
    shouldRunAfter 'integrationTest'
    testKitStrategy = directoryPerTest

//    gradleArguments '-d'
}

license {
    header = rootProject.file('gradle/license/HEADER')
    strictCheck = true
    ignoreFailures = false
    mapping {
        java = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
    }
    ext.year = '2017-2021'
    excludes([
        '**/*.adoc', '**/*.md',
        '**/*.properties',
        '**/*dsl.*Spec.groovy',
        '**/*.json',
        '**/*.tf'
    ])
}

pluginBundle {
    mavenCoordinates {
        groupId = project.group
    }
}

publishPlugins {
    onlyIf notSnapshot
    mustRunAfter check, ':docs:installDocs'
}

apply from: rootProject.file('gradle/integration-tests.gradle')