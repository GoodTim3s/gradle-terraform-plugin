plugins {
    id 'groovy'
    id 'codenarc'
    id 'java-gradle-plugin'
    id 'org.ysb33r.gradletest'
    id 'org.asciidoctor.jvm.convert'
    id 'org.asciidoctor.editorconfig'
    id 'com.gradle.plugin-publish'
    id 'com.github.hierynomus.license'
    id 'org.ajoberstar.git-publish'
    id 'org.ysb33r.cloudci.appveyor.testreporter'
}

apply from: rootProject.file('gradle/plugin-dev.gradle')
apply from: rootProject.file('gradle/integration-tests.gradle')
apply from: rootProject.file('gradle/codenarc.gradle')


dependencies {
    compile "net.sourceforge.nekohtml:nekohtml:1.9.14"
}

pluginBundle {
    website = 'https://ysb33rOrg.gitlab.io/terraform-gradle-plugin'
    vcsUrl  = 'https://gitlab.com/ysb33rOrg/terraform-gradle-plugin.git'
    tags    = [
        'terraform', 'hashicorp',
        'amazon', 'aws',
        'cloudstack', 'digitalocean', 'openstack', 'google-cloud',
        'docker',
        'virtualbox','vmware', 'hyper-v', 'parallels', 'qemu', 'vsphere',
        'vagrant',
        'ansible', 'chef', 'powershell', 'salt'
    ]

    plugins {
        terraformBasePlugin {
            id = 'org.ysb33r.terraform.base'
            displayName = 'Terraform Base plugin'
            description = 'Provides Terraform extension and tasks. No need to have terraform installed as plugin will take care of caching and installation in a similar fashion as to have Gradle distributions are cached'
        }
        terraformPlugin {
            id = 'org.ysb33r.terraform'
            displayName = 'Terraform conventions plugin'
            description = 'Provides Terraform conventions, source sets and predefined tasks'
        }
        terraformRCPlugin {
            id = 'org.ysb33r.terraform.rc'
            displayName = 'Terraform Configuration (terraformrc) plugin'
            description = 'Deals specifically with the creation of terraformrc files'
        }
        terraformWrapperPlugin {
            id = 'org.ysb33r.terraform.wrapper'
            displayName = 'Terraform Wrapper plugin'
            description = 'Provides terraformw wrapper script so that terraform can be run from the command-line using exactly the same binary that the Gradle project will use.'
        }
        terraformS3RemoteStatePlugin {
            id = 'org.ysb33r.terraform.remotestate.s3'
            displayName = 'Terraform remote state in S3'
            description = 'Simplifies the storing of Terraform remote state in S3'
        }
        terraformCheckPlugin {
            id = 'org.ysb33r.terraform.check'
            displayName = 'Terraform source checks'
            description = 'Adds Terraform source format validation into the check lifecycle'
        }
    }
}
